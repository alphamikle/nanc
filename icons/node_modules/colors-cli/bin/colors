#!/usr/bin/env node
var colors = require('../');
var args = process.argv.slice(2);
var _Colors = new colors.Colors()

var styles = '';
var scripts = '';
var output = '';
var help = false;
var log = console.log;

colors.toxic();

args.filter(function (arg) {
  if (arg === '-h' || arg === '--help') {
    help = true;
  }else if(/\-\-/.test(arg)){
    styles = arg.replace('--','').split(',');
  }else{
    for (var i = 0; i < styles.length; i++) {
      _Colors.string = arg;
      if(styles[i]) scripts = _Colors[styles[i]].valueOf();
    }
    output += scripts;
  }
});

if (args && args.length === 0) {
  help= true;
}

var _styles = require('../lib/styles-name')
var colors_name = _styles.colors;
var styles_name = _styles.styles;

if (help) {
  log('')
  log('\33[2J') // 清屏
  log(' Usage: colors')
  log('')
  log(' Options:')
  log('')

  log('  1.Colors Number');
  log();
  for (var i = 0; i < 256; i++) {
    if (i !== 0 && i % 16 === 0) {
      log();
      process.stdout.write('   ');
    }
    if(i === 0)process.stdout.write('   ');
    var c = new colors.Colors(wordwrap(i));
    c.fgcolor_x = i;
    process.stdout.write(c.valueOf());
  }
  log();


  log("")
  log("  2.styles:")
  log("")

  styles_name.forEach(function(key) {
    process.stdout.write("   "+key[key])
    // log(key[key].red)
  });

  log("")
  log("")
  log("  3.colors:")
  log("")

  colors_name.forEach(function(key) {
      process.stdout.write("   "+key[key])
  });

  log("")
  log("")
  log("  4.background colors:")
  log("")

  colors_name.forEach(function(key) {
      // process.stdout.write("  "+key[key+'_b'])
      process.stdout.write("   "+eval( '"' +key+"_b"+ ' ".'+key+"_b"))
  });


  log("")
  log("")
  log("  5.Font Bright Color:")
  log("")

  colors_name.forEach(function(key) {
      // process.stdout.write("  "+key[key+'_bt'])
      process.stdout.write("   "+eval( '"' +key+"_bt"+ ' ".'+key+"_bt"))
  });


  log("")
  log("")
  log("  6.Background Bright Color:")
  log("")

  colors_name.forEach(function(key) {
    // process.stdout.write("  "+key[key+'_bbt'])
    process.stdout.write("   "+eval( '" ' +key+"_bbt"+ ' ".'+key+"_bbt"))
  });



  log('')
  log('')
  log(' Examples:')
  log('')
  log('   colors --red "\\nhello world" --bold,underline,yellow "wcj"')
  log('   colors --green,bold "\\nhello world"')
  log('   colors --x12,bold "hello world"')
  log('')

}else{
  log(output);
}


function wordwrap(i) {
  i = String(i)
  return i + new Array(5 - i.length).join(' ');
}


// var fs = require('fs');
// var read = fs.createReadStream;
// var write = fs.createWriteStream;
// var dest = args[2] ? write(args[2]) : process.stdout
// var source = args[1] ? read(args[1]) : process.stdin


// var str = source.on('end', function (es,ss) {
//     dest.write('---12:',es,str)
// }).pipe(dest, {end: false})

// log("args:",str)
