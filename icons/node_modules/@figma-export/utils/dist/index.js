"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.kebabCase = exports.snakeCase = exports.pascalCase = exports.camelCase = void 0;
const upperFirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);
const lowerFirst = (str) => str.charAt(0).toLowerCase() + str.slice(1);
/**
 * Remove spaces or punctuation from a string, indicating the separation of words with a single capitalized letter,
 * and the first word starting with lower case.
 *
 * @example "Camel Case" => "camelCase"
 */
const camelCase = (str) => {
    const words = str.match(/((\b|)[^\W_]+(\b|))/g) || [];
    return words.reduce((accumulator, word, index) => {
        return `${accumulator}${index === 0 ? lowerFirst(word) : upperFirst(word)}`;
    }, '');
};
exports.camelCase = camelCase;
/**
 * Remove spaces or punctuation from a string, indicating the separation of words with a single capitalized letter,
 * and the first word starting with upper case.
 *
 * @example "Pascal Case" => "PascalCase"
 */
const pascalCase = (str) => upperFirst(camelCase(str));
exports.pascalCase = pascalCase;
/**
 * Combines words by replacing all spaces and punctuation with an undescore (_).
 *
 * @example "Snake Case" => "Snake_Case"
 */
const snakeCase = (str) => str.replace(/[\W_]+/g, '_');
exports.snakeCase = snakeCase;
/**
 * Combines words by replacing all spaces and punctuation with a dash (-).
 *
 * @example "Kebab Case" => "Kebab-Case"
 */
const kebabCase = (str) => str.replace(/[\W_]+/g, '-');
exports.kebabCase = kebabCase;
//# sourceMappingURL=index.js.map