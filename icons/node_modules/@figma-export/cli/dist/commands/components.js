"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addComponents = void 0;
const figmaExport = __importStar(require("@figma-export/core"));
const utils_1 = require("../utils");
const addComponents = (prog, spinner) => prog
    .command('components <fileId>')
    .describe('Export components from a Figma file.')
    .option('-O, --outputter', 'Outputter module or path')
    .option('-T, --transformer', 'Transformer module or path')
    .option('-c, --concurrency', 'Concurrency when fetching', 30)
    .option('-r, --retries', 'Maximum number of retries when fetching fails', 3)
    .option('-o, --output', 'Output directory', 'output')
    .option('-p, --page', 'Figma page names (all pages when not specified)')
    .option('--fileVersion', `A specific version ID to get. Omitting this will get the current version of the file.
                         https://help.figma.com/hc/en-us/articles/360038006754-View-a-file-s-version-history`)
    .example('components fzYhvQpqwhZDUImRz431Qo -O @figma-export/output-components-as-svg')
    .action((fileId, _a) => {
    var { fileVersion, concurrency, retries, output } = _a, opts = __rest(_a, ["fileVersion", "concurrency", "retries", "output"]);
    const outputter = (0, utils_1.asArray)(opts.outputter);
    const transformer = (0, utils_1.asArray)(opts.transformer);
    const page = (0, utils_1.asArray)(opts.page);
    spinner.info(`Exporting ${fileId} with [${transformer.join(', ')}] as [${outputter.join(', ')}]`);
    spinner.start();
    figmaExport.components({
        fileId,
        version: fileVersion,
        concurrency,
        retries,
        token: process.env.FIGMA_TOKEN || '',
        onlyFromPages: page,
        transformers: (0, utils_1.requirePackages)(transformer),
        outputters: (0, utils_1.requirePackages)(outputter, { output }),
        // eslint-disable-next-line no-param-reassign
        log: (message) => { spinner.text = message; },
    }).then(() => {
        spinner.succeed('done');
    }).catch((error) => {
        spinner.fail();
        // eslint-disable-next-line no-console
        console.error(error);
    });
});
exports.addComponents = addComponents;
//# sourceMappingURL=components.js.map